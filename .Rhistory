library("Rcpp")
library("usethis")
p_load(Rcpp, usethis, devtools, dada2, ShortRead, Biostrings, phyloseq, ggplot2)
# Load required libraries
library(pacman)
p_load(Rcpp, usethis, devtools, dada2, ShortRead, Biostrings, phyloseq, ggplot2)
path <- getwd(/Volumes/CHARLESRL/DCarole/MiSeq_4Maladies)
path <- setwd(Volumes/CHARLESRL/DCarole/MiSeq_4Maladies)
path <- setwd("/Volumes/CHARLESRL/DCarole/MiSeq_4Maladies")
list.files(path)
list.files("/Volumes/CHARLESRL/DCarole/MiSeq_4Maladies/")
# Create object path as your working directory
path <- "/Volumes/CHARLESRL/DCarole/MiSeq_4Maladies/"
list.files(path)
# Sort Rev and Fwd fastq files + add primers
fnFs <- sort(list.files(path, pattern = "_R1.fastq.gz", full.names = TRUE))
REV <- "GGAAGTAAAAGTCGTAACAAGG"
allOrients <- function(primer) {
# Create all orientations of the input sequence
require(Biostrings)
dna <- DNAString(primer)  # The Biostrings works w/ DNAString objects rather than character vectors
orients <- c(Forward = dna, Complement = complement(dna), Reverse = reverse(dna),
RevComp = reverseComplement(dna))
return(sapply(orients, toString))  # Convert back to character vector
}
FWD.orients <- allOrients(FWD)
REV.orients <- allOrients(REV)
FWD <- "TCCTCCGCTTATTGATATGC"
allOrients <- function(primer) {
# Create all orientations of the input sequence
require(Biostrings)
dna <- DNAString(primer)  # The Biostrings works w/ DNAString objects rather than character vectors
orients <- c(Forward = dna, Complement = complement(dna), Reverse = reverse(dna),
RevComp = reverseComplement(dna))
return(sapply(orients, toString))  # Convert back to character vector
}
FWD.orients <- allOrients(FWD)
REV.orients <- allOrients(REV)
FWD.orients
fnFs.filtN <- file.path(path, "filtN", basename(fnFs)) # Put N-filterd files in filtN/ subdirectory
fnFs.filtN <- file.path(path, "filtN", basename(fnFs)) # Put N-filterd files in filtN/ subdirectory
fnRs.filtN <- file.path(path, "filtN", basename(fnRs))
fnRs.filtN <- file.path(path, "filtN", basename(fnRs))
fnRs <- sort(list.files(path, pattern = "_R2.fastq.gz", full.names = TRUE))
fnFs.filtN <- file.path(path, "filtN", basename(fnFs)) # Put N-filterd files in filtN/ subdirectory
fnRs.filtN <- file.path(path, "filtN", basename(fnRs))
filterAndTrim(fnFs, fnFs.filtN, fnRs, fnRs.filtN, maxN = 0, multithread = TRUE)
filterAndTrim(fnFs, fnFs.filtN, fnRs, fnRs.filtN, maxN = 0, multithread = TRUE)
filterAndTrim(fnFs, fnFs.filtN, fnRs, fnRs.filtN, maxN = 0, multithread = TRUE)
# Create object path as your working directory
path <- "/Volumes/CHARLESRL/DCarole/MiSeq_4Maladies"
list.files(path)
# Sort Rev and Fwd fastq files + add primers
fnFs <- sort(list.files(path, pattern = "_R1.fastq.gz", full.names = TRUE))
fnRs <- sort(list.files(path, pattern = "_R2.fastq.gz", full.names = TRUE))
REV <- "GGAAGTAAAAGTCGTAACAAGG"
FWD <- "TCCTCCGCTTATTGATATGC"
allOrients <- function(primer) {
# Create all orientations of the input sequence
require(Biostrings)
dna <- DNAString(primer)  # The Biostrings works w/ DNAString objects rather than character vectors
orients <- c(Forward = dna, Complement = complement(dna), Reverse = reverse(dna),
RevComp = reverseComplement(dna))
return(sapply(orients, toString))  # Convert back to character vector
}
FWD.orients <- allOrients(FWD)
REV.orients <- allOrients(REV)
FWD.orients
fnFs.filtN <- file.path(path, "filtN", basename(fnFs)) # Put N-filterd files in filtN/ subdirectory
fnRs.filtN <- file.path(path, "filtN", basename(fnRs))
filterAndTrim(fnFs, fnFs.filtN, fnRs, fnRs.filtN, maxN = 0, multithread = TRUE)
filterAndTrim(fnFs, fnFs.filtN, fnRs, fnRs.filtN, maxN = 0, multithread = TRUE)
###############################################
####FUNGAL ITS SEQUENCE ANALYSIS WITH DADA2####
###############################################
# Load required libraries
library(pacman)
p_load(Rcpp, usethis, devtools, dada2, ShortRead, Biostrings, phyloseq, ggplot2)
# Create object path as your working directory
path <- "/Volumes/CHARLESRL/DCarole/MiSeq_4Maladies"
list.files(path)
# Sort Rev and Fwd fastq files + add primers
fnFs <- sort(list.files(path, pattern = "_R1.fastq.gz", full.names = TRUE))
fnRs <- sort(list.files(path, pattern = "_R2.fastq.gz", full.names = TRUE))
REV <- "GGAAGTAAAAGTCGTAACAAGG"
FWD <- "TCCTCCGCTTATTGATATGC"
allOrients <- function(primer) {
# Create all orientations of the input sequence
require(Biostrings)
dna <- DNAString(primer)  # The Biostrings works w/ DNAString objects rather than character vectors
orients <- c(Forward = dna, Complement = complement(dna), Reverse = reverse(dna),
RevComp = reverseComplement(dna))
return(sapply(orients, toString))  # Convert back to character vector
}
FWD.orients <- allOrients(FWD)
REV.orients <- allOrients(REV)
FWD.orients
fnFs.filtN <- file.path(path, "filtN", basename(fnFs)) # Put N-filterd files in filtN/ subdirectory
fnRs.filtN <- file.path(path, "filtN", basename(fnRs))
filterAndTrim(fnFs, fnFs.filtN, fnRs, fnRs.filtN, maxN = 0, multithread = TRUE)
